---
- name: Disable firewall for Domain, Public, and Private profiles
  win_firewall:
    state: disabled
    profiles:
    - Domain
    - Private
    - Public

- name: Set hostname
  win_hostname:
    name: "{{ hostvars[inventory_hostname].instance_name }}"
  register: win_hostname

- name: Reboot if required
  win_reboot:
  when: win_hostname.reboot_required

- name: Install AD-Domain-Services
  win_feature:
    name: AD-Domain-Services
    state: present
    include_management_tools: True
    include_sub_features: True
  register: winfeature

- name: Reboot if needed
  win_reboot:
  when: winfeature.changed

- name: Create DNS Domain
  win_domain:
    dns_domain_name: "{{ dns_domain_name }}"
    safe_mode_password: "{{ windows_password }}"
  register: windomain

- name: Reboot if needed
  win_reboot:
  when:
    - windomain.reboot_required

- name: Wait for Active Directory Web Services port
  win_wait_for:
    host: localhost
    port: 9389
    timeout: 600

- name: Ensure AD Services are started
  win_service:
    name: "{{ item }}"
    state: started
    start_mode: auto
  with_items:
    - dns
    - adws

- name: Set Reverse Lookup Zone
  win_ad_reverse_dnszone:
    subnet: "{{ ptr_zone_cidr }}"
    zonename: "{{ ptr_zone_name }}"
    state: present
  register: reverse
  until: reverse is not failed
  retries: 100

- name: Create DNS A records
  win_ad_dnsrecord:
    hostname: "{{ hostvars[item]['instance_name'] }}"
    zone: "{{ dns_domain_name }}"
    ipaddr: "{{ hostvars[item]['private_ip_address'] }}"
    state: present
  with_items:
    - "gitlab.{{ chomped_zone_internal_dns }}"
    - "tower.{{ chomped_zone_internal_dns }}"
    - "win1.{{ chomped_zone_internal_dns }}"
    - "win2.{{ chomped_zone_internal_dns }}"

- name: Add windows group
  win_domain_group:
    name: Ansible Users
    scope: global

- name: Add windows domain admin
  win_domain_user:
    name: "Admin"
    upn: "Admin@{{ dns_domain_name }}"
    state: present
    enabled: yes
    account_locked: no
    groups:
      - Domain Admins
    password: "{{ windows_password }}"
    update_password: on_create
    password_expired: false
    firstname: admin
    surname: user
    company: Training
    email: "Admin@{{ dns_domain_name }}"

- name: Add windows AD users
  win_domain_user:
    name: "{{ user_prefix }}"
    upn: "{{ user_prefix }}@{{ dns_domain_name }}"
    state: present
    enabled: yes
    account_locked: no
    groups:
      - Ansible Users
    password: "{{ windows_password }}"
    update_password: on_create
    password_expired: false
    firstname: "{{ user_prefix }}"
    surname: "student"
    company: Training
    email: "{{ user_prefix }}@{{ dns_domain_name }}"

- name: Set DNS search string
  win_dns_searchsuffix:
    suffixes:
      - "{{ dns_domain_name }}"

- name: Install RSAT feature
  win_feature:
    name: RSAT-AD-PowerShell
    state: present
    include_management_tools: yes

- name: Extend password expiry
  win_shell: |
    import-module ActiveDirectory
    $admin_passwd = ConvertTo-SecureString "{{ windows_password }}" -AsPlainText -Force
    $admin_creds = New-Object System.Management.Automation.PSCredential ("EXAMPLE\Administrator", $admin_passwd)
    Set-ADDefaultDomainPasswordPolicy -Identity example.com -Credential $admin_creds -MaxPasswordAge 90.00:00:00

# - name: Remove RSAT feature
#   win_feature:
#     name: RSAT-AD-PowerShell
#     state: absent
