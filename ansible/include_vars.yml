---
- hosts:
    - localhost
    - all
  connection: local
  gather_facts: no
  tags: include_vars
  tasks:
    - name: Set output_dir for all hosts
      set_fact:
        output_dir: "{{ hostvars.localhost.output_dir }}"
      when: hostvars.localhost.output_dir is defined

    - name: Load default variables - Linux
      when: hostvars[inventory_hostname].ostype | d('linux') != 'windows'
      block:
      - name: stats env_vars.yml and (legacy) env_secret_vars.yml - Linux
        stat:
          path: "{{ item }}"
        loop:
          - configs/{{ env_type }}/env_vars.yml
          - configs/{{ env_type }}/env_secret_vars.yml
          - "{{ secret_file | d('/secret/file/not/passed') }}"
        register: rstat_varfiles
      - name: Include vars files
        include_vars:
          file: "{{ item.stat.path }}"
        when: item.stat.exists
        loop: "{{ rstat_varfiles.results }}"
        loop_control:
          label: "{{ item._ansible_item_label | default(item) }}"

    - name: Load default variables - Windows
      when:
        - groups['windows'] is defined 
        - inventory_hostname in groups['windows']
      block:
      - name: stats env_vars.yml and (legacy) env_secret_vars.yml - Windows
        stat:
          path: "{{ item }}"
        loop:
          - configs/{{ env_type }}/env_vars.yml
          - configs/{{ env_type }}/env_secret_vars.yml
          - "{{ secret_file | d('/secret/file/not/passed') }}"
        register: rstat_varfiles
      - name: Include vars files
        include_vars:
          file: "{{ item.stat.path }}"
        when: item.stat.exists
        loop: "{{ rstat_varfiles.results }}"
        loop_control:
          label: "{{ item._ansible_item_label | default(item) }}"
      delegate_to: localhost
